	private static IRepositoryCommit getCommitForElement(Object element) {
		if (element instanceof IRepositoryCommit) {
			return (IRepositoryCommit) element;
		} else if (element instanceof GitModelCommit) {
			GitModelCommit modelCommit = (GitModelCommit) element;
			if (!(modelCommit.getParent() instanceof GitModelRepository))
				return null; 
			GitModelRepository parent = (GitModelRepository) modelCommit.getParent();
			Repository repo = parent.getRepository();
			AbbreviatedObjectId id = modelCommit.getCachedCommitObj().getId();
			try (RevWalk rw = new RevWalk(repo)) {
				RevCommit commit = rw.lookupCommit(id.toObjectId());
				return new IRepositoryCommit() {

					@Override
					public Repository getRepository() {
						return repo;
					}

					@Override
					public RevCommit getRevCommit() {
						return commit;
					}
				};
			}
		}
		return null;
	}

