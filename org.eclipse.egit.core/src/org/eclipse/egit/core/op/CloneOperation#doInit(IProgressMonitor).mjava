	private void doInit(final IProgressMonitor monitor)
			throws URISyntaxException, IOException {
		monitor.setTaskName(CoreText.CloneOperation_initializingRepository);

		local = new FileRepository(gitdir);
		local.create();

		if (ref.getName().startsWith(Constants.R_HEADS)) {
			final RefUpdate head = local.updateRef(Constants.HEAD);
			head.disableRefLog();
			head.link(ref.getName());
		}

		FileBasedConfig config = local.getConfig();
		remoteConfig = new RemoteConfig(config, remoteName);
		remoteConfig.addURI(uri);

		final String dst = Constants.R_REMOTES + remoteConfig.getName();
		RefSpec wcrs = new RefSpec();
		wcrs = wcrs.setForceUpdate(true);
		wcrs = wcrs.setSourceDestination(Constants.R_HEADS
				+ "*", dst + "/*"); 
		if (allSelected) {
			remoteConfig.addFetchRefSpec(wcrs);
		} else {
			for (final Ref selectedRef : selectedBranches)
				if (wcrs.matchSource(selectedRef))
					remoteConfig.addFetchRefSpec(wcrs.expandFromSource(selectedRef));
		}

		config.setBoolean(
				"core", null, "bare", false); 
		remoteConfig.update(config);

		if (ref.getName().startsWith(Constants.R_HEADS)) {
			String branchName = ref.getName().substring(Constants.R_HEADS.length());

			config.setString("branch", branchName, "remote", remoteName); 			config.setString("branch", branchName, "merge", ref.getName()); 		}
		config.save();
	}

