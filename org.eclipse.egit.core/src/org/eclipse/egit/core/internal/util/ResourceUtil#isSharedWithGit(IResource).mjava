	public static boolean isSharedWithGit(@NonNull IResource resource) {
		IProject project = resource.getProject();
		if (!project.isAccessible()) {
			return false;
		}
		try {
			GitProvider provider = lookupProviderProp(project);
			if (provider != null || MappingJob.isKnownGitProject(project)) {
				return true;
			} else if (isMarkedAsNotSharedWithGit(project)) {
				return false;
			}
			String existingID = project
					.getPersistentProperty(PROVIDER_PROP_KEY);
			if (existingID == null) {
				markAsUnshared(project);
			} else {
				markAsShared(project, existingID);
			}
			boolean isGitProvider = GitProvider.ID.equals(existingID);
			if (isGitProvider) {
				MappingJob.initProviderAsynchronously(project);
			}
			return isGitProvider;
		} catch (CoreException e) {
			Activator.getDefault().getLog().log(e.getStatus());
			return false;
		}
	}

