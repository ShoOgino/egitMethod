	public IndexDiffCacheEntry(Repository repository,
			@Nullable IndexDiffChangedListener listener) {
		this.repository = repository;
		if (listener != null) {
			addIndexDiffChangedListener(listener);
		}

		indexChangedListenerHandle = repository.getListenerList().addIndexChangedListener(
				new IndexChangedListener() {
					@Override
					public void onIndexChanged(IndexChangedEvent event) {
						refreshIndexDelta();
					}
				});
		refsChangedListenerHandle = repository.getListenerList().addRefsChangedListener(
				new RefsChangedListener() {
					@Override
					public void onRefsChanged(RefsChangedEvent event) {
						scheduleReloadJob("RefsChanged"); 					}
				});

		scheduleReloadJob("IndexDiffCacheEntry construction"); 		createResourceChangeListener();
		if (!repository.isBare()) {
			try {
				lastIndex = repository.readDirCache();
			} catch (IOException ex) {
				Activator
						.error(MessageFormat
								.format(CoreText.IndexDiffCacheEntry_errorCalculatingIndexDelta,
										repository), ex);
			}
		}
	}

