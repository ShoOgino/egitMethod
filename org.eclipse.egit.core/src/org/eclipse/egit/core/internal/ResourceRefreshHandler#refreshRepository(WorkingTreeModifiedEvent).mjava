	private void refreshRepository(WorkingTreeModifiedEvent event)
			throws CoreException {
		if (event.isEmpty()) {
			return; 		}
		File workTree = event.getRepository().getWorkTree().getAbsoluteFile();
		Map<IPath, IProject> roots = getProjectLocations(workTree);
		if (roots.isEmpty()) {
			return;
		}
		IPath wt = new Path(workTree.getPath());
		Map<IResource, Boolean> toRefresh = computeResources(
				event.getModified(), event.getDeleted(), wt, roots);
		if (toRefresh.isEmpty()) {
			return;
		}
		if (GitTraceLocation.REFRESH.isActive()) {
			GitTraceLocation.getTrace().trace(
					GitTraceLocation.REFRESH.getLocation(),
					"Refreshing repository " + workTree + ' ' 							+ toRefresh.size());
		}
		for (Map.Entry<IResource, Boolean> entry : toRefresh.entrySet()) {
			entry.getKey()
					.refreshLocal(entry.getValue().booleanValue()
							? IResource.DEPTH_INFINITE
							: IResource.DEPTH_ONE, null);
		}
		if (GitTraceLocation.REFRESH.isActive()) {
			GitTraceLocation.getTrace().trace(
					GitTraceLocation.REFRESH.getLocation(),
					"Refreshed repository " + workTree + ' ' 							+ toRefresh.size());
		}
	}

