	public GitSynchronizeData(Repository repository, String srcRev,
			String dstRev, boolean includeLocal,
			Set<IResource> includedResources) throws IOException {
		isNotNull(repository);
		isNotNull(srcRev);
		isNotNull(dstRev);
		this.repo = repository;
		this.srcRev = srcRev;
		this.dstRev = dstRev;
		this.includeLocal = includeLocal;

		RemoteAndMerge dstRemoteAndMerge = extractRemoteAndMergeForDst(dstRev);

		dstRemote = dstRemoteAndMerge.remote;
		dstMerge = dstRemoteAndMerge.merge;

		repoParentPath = repo.getDirectory().getParentFile().getAbsolutePath();

		projects = new HashSet<>();
		final Iterable<? extends IResource> includedResourceIterable;
		if (includedResources == null)
			includedResourceIterable = Arrays.asList(ROOT.getProjects());
		else
			includedResourceIterable = includedResources;
		for (IResource res : includedResourceIterable) {
			IProject project = res.getProject();
			RepositoryMapping mapping = RepositoryMapping.getMapping(project);
			if (mapping != null && mapping.getRepository() == repo)
				projects.add(project);
		}

		if (includedResources != null)
			setIncludedResources(includedResources);

		updateRevs();
	}

