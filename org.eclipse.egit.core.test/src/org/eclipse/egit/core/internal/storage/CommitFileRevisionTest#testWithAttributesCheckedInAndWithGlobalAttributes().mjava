	@Test
	public void testWithAttributesCheckedInAndWithGlobalAttributes()
			throws Exception {
		java.nio.file.Path filePath = createFile(project.getProject(),
				"attr.txt", "a");
		try (Git git = new Git(repository)) {
			git.add().addFilepattern(".").call();
			git.commit().setMessage("Initial commit").call();
			createFile(project.getProject(), "attr.txt", "aa");
			git.reset().setMode(ResetType.HARD).call();
			List<String> content = Files.readAllLines(filePath,
					StandardCharsets.UTF_8);
			assertEquals(1, content.size());
			assertEquals("a", content.get(0));
			RevCommit head = setupFilter(repository, project.getProject(),
					true);
			java.nio.file.Path globalAttributes = createFile(
					project.getProject(), "globalattrs", "*.txt filter=test2");
			FilterCommandRegistry.register("egit://builtin/test/smudge2",
					new TestCommandFactory('a', 'y'));
			StoredConfig config = repository.getConfig();
			config.setString("core", null, "attributesFile",
					globalAttributes.toString());
			config.setString("filter", "test2", "smudge",
					"egit://builtin/test/smudge2");
			config.save();
			createFile(project.getProject(), "attr.txt", "aa");
			git.reset().setMode(ResetType.HARD).call();
			content = Files.readAllLines(filePath, StandardCharsets.UTF_8);
			assertEquals(1, content.size());
			assertEquals("x", content.get(0));
			String relativePath = repository.getWorkTree().toPath()
					.relativize(filePath).toString();
			CommitFileRevision fileRevision = new CommitFileRevision(repository,
					head, relativePath);
			ByteBuffer rawContent = null;
			try (InputStream blobStream = fileRevision
					.getStorage(new NullProgressMonitor()).getContents()) {
				rawContent = IO.readWholeStream(blobStream, 1);
			}
			assertNotNull(rawContent);
			String blobContent = new String(rawContent.array(), 0,
					rawContent.limit(), StandardCharsets.UTF_8);
			assertEquals("x", blobContent);
		} finally {
			FilterCommandRegistry.unregister("egit://builtin/test/smudge");
			FilterCommandRegistry.unregister("egit://builtin/test/smudge2");
		}
	}

