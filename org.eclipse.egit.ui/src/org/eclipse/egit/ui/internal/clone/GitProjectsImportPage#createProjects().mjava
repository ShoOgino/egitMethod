	boolean createProjects() {
		final Set<ProjectRecord> selected = getCheckedProjects();
		WorkspaceModifyOperation op = new WorkspaceModifyOperation() {
			protected void execute(IProgressMonitor monitor)
					throws InvocationTargetException, InterruptedException {
				try {
					monitor.beginTask("", selected.size()); 					if (monitor.isCanceled()) {
						throw new OperationCanceledException();
					}
					for (ProjectRecord projectRecord : selected) {
						createExistingProject(projectRecord,
								new SubProgressMonitor(monitor, 1));
					}
				} finally {
					monitor.done();
				}
			}
		};
		try {
			getContainer().run(true, true, op);
		} catch (InterruptedException e) {
			return false;
		} catch (InvocationTargetException e) {
			Throwable t = e.getTargetException();
			Activator.handleError(UIText.WizardProjectImportPage_errorMessage,
					t, true);
			return false;
		}
		addProjectsToWorkingSet(selected);
		return true;
	}

