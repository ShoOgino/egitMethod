	protected boolean markRef(String refName) {
		if (refName == null)
			return false;

		RepositoryTreeNode node;
		try {
			if (refName.startsWith(Constants.R_HEADS)) {
				Ref ref = repo.getRef(refName);
				if (ref == null)
					return false;
				node = new RefNode(localBranches, repo, ref);
			} else if (refName.startsWith(Constants.R_REMOTES)) {
				Ref ref = repo.getRef(refName);
				if (ref == null)
					return false;
				node = new RefNode(remoteBranches, repo, ref);
			} else if (Constants.HEAD.equals(refName)) {
				Ref ref = repo.getRef(refName);
				if (ref == null)
					return false;
				node = new AdditionalRefNode(references, repo, ref);
			} else {
				String mappedRef = Activator.getDefault().getRepositoryUtil()
						.mapCommitToRef(repo, refName, false);
				if (mappedRef != null
						&& mappedRef.startsWith(Constants.R_REMOTES)) {
					Ref ref = repo.getRef(mappedRef);
					if (ref == null)
						return false;
					node = new RefNode(remoteBranches, repo, ref);
				} else if (mappedRef != null
						&& mappedRef.startsWith(Constants.R_TAGS)) {
					Ref ref = repo.getRef(mappedRef);
					if (ref == null)
						return false;
					node = new TagNode(tags, repo, ref);
				} else
					return false;
			}
		} catch (IOException e) {
			return false;
		}

		branchTree.setSelection(new StructuredSelection(node), true);
		return true;
	}

