	@Override
	protected Composite createDialogArea(Composite base) {
		Composite parent = (Composite) super.createDialogArea(base);
		parent.setLayout(GridLayoutFactory.swtDefaults().create());
		new Label(parent, SWT.NONE).setText(UIText.BranchSelectionDialog_Refs);

		branchTree = new TreeViewer(parent, SWT.SINGLE | SWT.BORDER);
		new RepositoriesViewLabelProvider(branchTree);
		branchTree.setContentProvider(new RepositoriesViewContentProvider());

		GridDataFactory.fillDefaults().grab(true, true).hint(500, 300).applyTo(
				branchTree.getTree());
		branchTree.addSelectionChangedListener(new ISelectionChangedListener() {

			public void selectionChanged(SelectionChangedEvent event) {

				String refName = refNameFromDialog();

				boolean headSelected = Constants.HEAD.equals(refName);

				boolean tagSelected = refName != null
						&& refName.startsWith(Constants.R_TAGS);

				boolean branchSelected = refName != null
						&& (refName.startsWith(Constants.R_HEADS) || refName
								.startsWith(Constants.R_REMOTES));

				confirmationBtn.setEnabled(branchSelected && !headSelected
						&& !tagSelected);

				if (!showResetType) {
					renameButton.setEnabled(branchSelected && !headSelected
							&& !tagSelected);

					newButton.setEnabled(branchSelected && !tagSelected);
				}
			}
		});

		branchTree.addOpenListener(new IOpenListener() {

			public void open(OpenEvent event) {
				RepositoryTreeNode node = (RepositoryTreeNode) ((IStructuredSelection) branchTree
						.getSelection()).getFirstElement();
				if (node.getType() != RepositoryTreeNodeType.REF)
					branchTree.setExpandedState(node, !branchTree
							.getExpandedState(node));
				else if (confirmationBtn.isEnabled())
					okPressed();

			}
		});

		if (showResetType) {
			buildResetGroup(parent);
		}

		String rawTitle = showResetType ? UIText.BranchSelectionDialog_TitleReset
				: UIText.BranchSelectionDialog_TitleCheckout;
		getShell().setText(
				NLS.bind(rawTitle, new Object[] { repo.getDirectory() }));

		return parent;
	}

