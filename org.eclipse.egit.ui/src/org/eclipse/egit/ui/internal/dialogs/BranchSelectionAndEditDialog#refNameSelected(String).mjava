	@Override
	protected void refNameSelected(String refName) {
		boolean tagSelected = refName != null
				&& refName.startsWith(Constants.R_TAGS);

		boolean branchSelected = refName != null
				&& (refName.startsWith(Constants.R_HEADS) || refName
						.startsWith(Constants.R_REMOTES));

		if (((TreeSelection) branchTree.getSelection()).size() > 1) {
			TreeSelection selection = (TreeSelection) branchTree
					.getSelection();
			deleteButton.setEnabled(onlyBranchesExcludingCurrentAreSelected(selection));
			renameButton.setEnabled(false);
			if (newButton != null)
				newButton.setEnabled(false);
			setOkButtonEnabled(false);
		} else {
			renameButton.setEnabled(branchSelected && !tagSelected);
			deleteButton.setEnabled(branchSelected && !tagSelected
					&& !isCurrentBranch(refName));
			if (newButton != null)
				newButton.setEnabled(true);
			setOkButtonEnabled((branchSelected || tagSelected)
					&& !isCurrentBranch(refName));
		}

		Button okButton = getButton(Window.OK);
		if (okButton != null) {
			if (BranchOperationUI.checkoutWillShowQuestionDialog(refName))
				okButton.setText(UIText.CheckoutDialog_OkCheckoutWithQuestion);
			else
				okButton.setText(UIText.CheckoutDialog_OkCheckout);
		}
	}

