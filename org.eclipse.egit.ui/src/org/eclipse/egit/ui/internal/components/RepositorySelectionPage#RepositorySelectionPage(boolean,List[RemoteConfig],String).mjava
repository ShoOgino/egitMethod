	public RepositorySelectionPage(final boolean sourceSelection,
			final List<RemoteConfig> configuredRemotes, String presetUri) {

		super(RepositorySelectionPage.class.getName());

		this.uri = new URIish();
		this.sourceSelection = sourceSelection;

		String preset = presetUri;
		if (presetUri == null) {
			Clipboard clippy = new Clipboard(Display.getCurrent());
			String text = (String) clippy.getContents(TextTransfer
					.getInstance());
			try {
				if (text != null) {
					text = text.trim();
					int index = text.indexOf(' ');
					if (index > 0)
						text = text.substring(0, index);
					URIish u = new URIish(text);
					if (canHandleProtocol(u)) {
						if (Protocol.GIT.handles(u) || Protocol.SSH.handles(u)
								|| text.endsWith(Constants.DOT_GIT))
							preset = text;
					}
				}
			} catch (URISyntaxException e) {
			}
			clippy.dispose();
		}
		this.presetUri = preset;

		this.configuredRemotes = getUsableConfigs(configuredRemotes);
		this.remoteConfig = selectDefaultRemoteConfig();

		selection = RepositorySelection.INVALID_SELECTION;

		if (sourceSelection) {
			setTitle(UIText.RepositorySelectionPage_sourceSelectionTitle);
			setDescription(UIText.RepositorySelectionPage_sourceSelectionDescription);
		} else {
			setTitle(UIText.RepositorySelectionPage_destinationSelectionTitle);
			setDescription(UIText.RepositorySelectionPage_destinationSelectionDescription);
		}
	}

