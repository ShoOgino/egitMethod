	private void outputEclipseDiff(final StringBuilder d, final Repository db,
			final ObjectReader reader, final DiffFormatter diffFmt)
			throws IOException {
		if (!(getBlobs().length == 2))
			throw new UnsupportedOperationException(
					"Not supported yet if the number of parents is different from one"); 
		String projectRelativePath = getProjectRelativePath(db, getPath());
		d.append("diff --git ").append(projectRelativePath).append(" ") 			.append(projectRelativePath).append("\n"); 		final ObjectId id1 = getBlobs()[0];
		final ObjectId id2 = getBlobs()[1];
		final FileMode mode1 = getModes()[0];
		final FileMode mode2 = getModes()[1];

		if (id1.equals(ObjectId.zeroId())) {
			d.append("new file mode " + mode2).append("\n"); 		} else if (id2.equals(ObjectId.zeroId())) {
			d.append("deleted file mode " + mode1).append("\n"); 		} else if (!mode1.equals(mode2)) {
			d.append("old mode " + mode1); 			d.append("new mode " + mode2).append("\n"); 		}
		d.append("index ").append(reader.abbreviate(id1).name()). 				append("..").append(reader.abbreviate(id2).name()). 				append(mode1.equals(mode2) ? " " + mode1 : "").append("\n"); 		if (id1.equals(ObjectId.zeroId()))
			d.append("--- /dev/null\n"); 		else {
			d.append("--- "); 			d.append(getProjectRelativePath(db, getPath()));
			d.append("\n"); 		}

		if (id2.equals(ObjectId.zeroId()))
			d.append("+++ /dev/null\n"); 		else {
			d.append("+++ "); 			d.append(getProjectRelativePath(db, getPath()));
			d.append("\n"); 		}

		final RawText a = getRawText(id1, reader);
		final RawText b = getRawText(id2, reader);
		final MyersDiff diff = new MyersDiff(RawTextComparator.DEFAULT, a, b);
		diffFmt.format(diff.getEdits(), a, b);
	}

