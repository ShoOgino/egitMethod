	public void outputDiff(final StringBuilder d, final Repository db,
			final DiffFormatter diffFmt, boolean noPrefix,
			boolean pathRelativeToProject) throws IOException {
		if (!(blobs.length == 2))
			throw new UnsupportedOperationException(
					"Not supported yet if the number of parents is different from one"); 
		final ObjectId id1 = blobs[0];
		final ObjectId id2 = blobs[1];
		final FileMode mode1 = modes[0];
		final FileMode mode2 = modes[1];

		if (id1.equals(ObjectId.zeroId())) {
			d.append("new file mode " + mode2).append("\n"); 		} else if (id2.equals(ObjectId.zeroId())) {
			d.append("deleted file mode " + mode1).append("\n"); 		} else if (!mode1.equals(mode2)) {
			d.append("old mode " + mode1); 			d.append("new mode " + mode2).append("\n"); 		}
		d.append("index ").append(id1.abbreviate(db, 7).name()). 				append("..").append(id2.abbreviate(db, 7).name()). 				append(mode1.equals(mode2) ? " " + mode1 : "").append("\n"); 		if (id1.equals(ObjectId.zeroId()))
			d.append("--- /dev/null\n"); 		else {
			d.append("--- "); 			if (!noPrefix)
				d.append("a").append(IPath.SEPARATOR); 			if (pathRelativeToProject)
				d.append(getProjectRelaticePath(db, path));
			else
				d.append(path);
			d.append("\n"); 		}

		if (id2.equals(ObjectId.zeroId()))
			d.append("+++ /dev/null\n"); 		else {
			d.append("+++ "); 			if (!noPrefix)
				d.append("b").append(IPath.SEPARATOR); 			if (pathRelativeToProject)
				d.append(getProjectRelaticePath(db, path));
			else
				d.append(path);
			d.append("\n"); 		}

		final RawText a = getRawText(id1, db);
		final RawText b = getRawText(id2, db);
		final MyersDiff diff = new MyersDiff(a, b);
		diffFmt.formatEdits(new OutputStream() {

			@Override
			public void write(int c) throws IOException {
				d.append((char) c);

			}
		}, a, b, diff.getEdits());
	}

