	@Override
	public IStatus handleDrop(CommonDropAdapter aDropAdapter,
			DropTargetEvent aDropTargetEvent, Object aTarget) {
		if (aTarget instanceof RepositoryGroupNode) {
			return handleRepositoryGroupNodeDrop((RepositoryGroupNode) aTarget,
					aDropTargetEvent);
		} else if (aTarget instanceof IWorkspaceRoot) {
			return handleWorkspaceRootDrop(aDropTargetEvent);
		}
		String[] data = (String[]) aDropTargetEvent.data;
		for (String folder : data) {
			File repoFile = new File(folder);
			if (FileKey.isGitRepository(repoFile, FS.DETECTED))
				Activator.getDefault().getRepositoryUtil()
						.addConfiguredRepository(repoFile);
			else if (!repoFile.getName().equals(Constants.DOT_GIT)) {
				File dotgitfile = new File(repoFile, Constants.DOT_GIT);
				if (FileKey.isGitRepository(dotgitfile, FS.DETECTED))
					Activator.getDefault().getRepositoryUtil()
							.addConfiguredRepository(dotgitfile);
			}
		}
		return Status.OK_STATUS;
	}

