	public StyledString getStyledText(Object element) {
		if (!(element instanceof RepositoryTreeNode))
			return null;

		RepositoryTreeNode node = (RepositoryTreeNode) element;

		try {
			switch (node.getType()) {
			case REPO:
				if (node.getParent() != null
						&& node.getParent().getType() == RepositoryTreeNodeType.SUBMODULES)
					return getStyledTextForSubmodule(node);
				return getStyledTextFor((Repository) node.getObject());
			case ADDITIONALREF:
				Ref ref = (Ref) node.getObject();
				StyledString refName = new StyledString(
						Repository.shortenRefName(ref.getName()));
				if (ref.isSymbolic()) {
					refName.append(" - ", StyledString.QUALIFIER_STYLER); 					refName.append(ref.getLeaf().getName(),
							StyledString.QUALIFIER_STYLER);
					refName.append(" - ", StyledString.QUALIFIER_STYLER); 					refName.append(ObjectId.toString(ref.getLeaf()
							.getObjectId()), StyledString.QUALIFIER_STYLER);
				} else {
					refName.append(" - ", StyledString.QUALIFIER_STYLER); 					refName.append(ObjectId.toString(ref.getObjectId()),
							StyledString.QUALIFIER_STYLER);

				}
				return refName;
			case WORKINGDIR:
				StyledString dirString = new StyledString(
						UIText.RepositoriesView_WorkingDir_treenode);
				dirString.append(" - ", StyledString.QUALIFIER_STYLER); 				dirString.append(node.getRepository().getWorkTree()
						.getAbsolutePath(), StyledString.QUALIFIER_STYLER);
				return dirString;

			case REF:
			case TAG:
				StyledString styled = null;
				String nodeText = getSimpleText(node);
				if (nodeText != null) {
					styled = new StyledString(nodeText);
					if (verboseBranchMode) {
						RevCommit latest = getLatestCommit(node);
						if (latest != null)
							styled.append(' ' + latest.abbreviate(7).name()
									+ ' ' + latest.getShortMessage(),
									StyledString.QUALIFIER_STYLER);
					}
				}
				return styled;
			case STASHED_COMMIT:
				return getStyledTextForCommit((StashedCommitNode) node);
			case PUSH:
			case FETCH:
			case FILE:
			case FOLDER:
			case BRANCHES:
			case LOCAL:
			case REMOTETRACKING:
			case BRANCHHIERARCHY:
			case TAGS:
			case ADDITIONALREFS:
			case REMOTES:
			case REMOTE:
			case SUBMODULES:
			case STASH:
			case ERROR: {
				String label = getSimpleText(node);
				if (label != null)
					return new StyledString(label);
			}

			}
		} catch (IOException e) {
			Activator.logError(e.getMessage(), e);
		}

		return null;

	}

