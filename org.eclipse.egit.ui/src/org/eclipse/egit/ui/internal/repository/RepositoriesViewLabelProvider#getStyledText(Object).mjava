	public StyledString getStyledText(Object element) {
		if (!(element instanceof RepositoryTreeNode))
			return null;

		RepositoryTreeNode node = (RepositoryTreeNode) element;

		String label = getSimpleText(node);
		if (label == null)
			return new StyledString(element.toString());

		StyledString text = new StyledString(label);

		try {
			switch (node.getType()) {
			case REPO:
				Repository repository = (Repository) node.getObject();
				File directory = repository.getDirectory();
				StyledString string = new StyledString(directory.getParentFile().getName());
				string.append(" - " + directory.getAbsolutePath(), StyledString.QUALIFIER_STYLER); 				string.append(" [" + repository.getBranch() + "]", StyledString.DECORATIONS_STYLER);  				return string;
			case SYMBOLICREF:
				Ref ref = (Ref) node.getObject();
				StyledString refName = new StyledString(node.getRepository().shortenRefName(ref.getName()));
				if (ref.isSymbolic()) {
					refName.append(" - ", StyledString.QUALIFIER_STYLER); 					refName.append(ref.getLeaf().getName(), StyledString.QUALIFIER_STYLER);
				}
				return refName;
			case WORKINGDIR:
				StyledString dirString = new StyledString(
						UIText.RepositoriesView_WorkingDir_treenode);
				dirString.append(" - ", StyledString.QUALIFIER_STYLER); 				if (node.getRepository().isBare()) {
					dirString
							.append(
									UIText.RepositoriesViewLabelProvider_BareRepositoryMessage,
									StyledString.QUALIFIER_STYLER);
				} else {
					dirString.append(node.getRepository().getWorkTree()
							.getAbsolutePath(), StyledString.QUALIFIER_STYLER);
				}
				return dirString;
			case PUSH:
			case FETCH:
			case FILE:
			case FOLDER:
			case BRANCHES:
			case LOCALBRANCHES:
			case REMOTEBRANCHES:
			case TAGS:
			case SYMBOLICREFS:
			case REMOTES:
			case REMOTE:
			case ERROR:
			case REF:
			case TAG:

			}
		} catch (IOException e) {
			Activator.logError(e.getMessage(), e);
		}

		return text;

	}

