	@Test
	public void testLinkWithEditor() throws Exception {
		deleteAllProjects();
		shareProjects(repositoryFile);
		SWTBotPerspective perspective = null;
		try {
			perspective = bot.activePerspective();
			bot.perspectiveById("org.eclipse.ui.resourcePerspective")
					.activate();
			SWTBotTree tree = getOrOpenView().bot().tree();
			myRepoViewUtil.getRootItem(tree, repositoryFile).select();
			assertTrue(tree.selection().get(0, 0).startsWith(REPO1));

			SWTBotView view = bot
					.viewById("org.eclipse.ui.navigator.ProjectExplorer");
			SWTBotTree projectExplorerTree = view.bot().tree();

			SWTBotTreeItem item = getProjectItem(projectExplorerTree, PROJ1)
					.expand().getNode(FOLDER).expand().getNode(FILE1);
			view.show();
			item.doubleClick();

			item = getProjectItem(projectExplorerTree, PROJ1).expand().getNode(
					FOLDER).expand().getNode(FILE2);
			view.show();
			item.doubleClick();

			assertTrue(tree.selection().get(0, 0).startsWith(REPO1));

			getOrOpenView().toolbarButton("Link with Editor").click();
			bot.editorByTitle(FILE2).show();
			TestUtil.waitUntilTreeHasSelectedNodeWithText(bot, tree, FILE2, 10000);

			bot.editorByTitle(FILE1).show();
			TestUtil.waitUntilTreeHasSelectedNodeWithText(bot, tree, FILE1, 10000);

			getOrOpenView().toolbarButton("Link with Editor").click();

			bot.editorByTitle(FILE2).show();
			TestUtil.waitUntilTreeHasSelectedNodeWithText(bot, tree, FILE1, 10000);

			bot.editorByTitle(FILE1).show();

			myRepoViewUtil.getWorkdirItem(tree, repositoryFile).expand()
					.getNode(PROJ1).expand().getNode(FOLDER).expand().getNode(
							FILE2).select();

			assertEquals(FILE1, bot.activeEditor().getTitle());

			SWTBotView repoView = getOrOpenView();
			repoView.toolbarButton("Link with Editor").click();
			waitInUI();
			myRepoViewUtil.getWorkdirItem(tree, repositoryFile).expand()
					.getNode(PROJ1).expand().getNode(FOLDER).expand().getNode(
							FILE2).select();
			TestUtil.waitUntilEditorIsActive(bot, bot.editorByTitle(FILE2), 10000);

			myRepoViewUtil.getWorkdirItem(tree, repositoryFile).expand()
					.getNode(PROJ1).expand().getNode(FOLDER).expand().getNode(
							FILE1).select();
			TestUtil.waitUntilEditorIsActive(bot, bot.editorByTitle(FILE1), 10000);

			getOrOpenView().toolbarButton("Link with Editor").click();

			myRepoViewUtil.getWorkdirItem(tree, repositoryFile).expand()
					.getNode(PROJ1).expand().getNode(FOLDER).expand().getNode(
							FILE2).select();
			TestUtil.waitUntilEditorIsActive(bot, bot.editorByTitle(FILE1), 10000);

		} finally {
			if (perspective != null)
				perspective.activate();
		}
	}

